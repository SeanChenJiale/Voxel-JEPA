INFO:root:called-params /media/backup_16TB/sean/VJEPA/jepa/configs/evals_a6000/vit_tiny/debug_vid/debug_vid.yaml
INFO:root:loaded params...
{   'data': {   'dataset_train': '/media/backup_16TB/sean/VJEPA/jepa/configs/evals_a6000/pretrain_maskfix_tiny/tiny_AD_binclass_slice48_mp4/Brainslice_48_ADclassification_train_final_filtered_zoom.csv',
                'dataset_type': 'VideoDataset',
                'dataset_val': '/media/backup_16TB/sean/VJEPA/jepa/configs/evals_a6000/pretrain_maskfix_tiny/tiny_AD_binclass_slice48_mp4/Brainslice_48_ADclassification_val_final_filtered_zoom.csv',
                'frame_step': 4,
                'frames_per_clip': 16,
                'num_classes': 2,
                'num_segments': 1,
                'num_views_per_segment': 1,
                'num_workers': 6},
    'data_aug': {   'auto_augment': False,
                    'motion_shift': False,
                    'normalize': [[0.347, 0.347, 0.347], [0.346, 0.346, 0.346]],
                    'random_resize_aspect_ratio': [0.75, 1.35],
                    'random_resize_scale': [0.3, 1.0],
                    'reprob': 0.0},
    'eval_name': 'video_classification_frozen',
    'logging': {   'project': 'voxel-jepa-ad-bin-tiny-test',
                   'run_name': 'vid_test'},
    'nodes': 1,
    'optimization': {   'attend_across_segments': False,
                        'batch_size': 14,
                        'final_lr': 0.0,
                        'lr': 0.0005,
                        'num_epochs': 1,
                        'resolution': 224,
                        'start_lr': 0.0005,
                        'use_bfloat16': True,
                        'warmup': 0.0,
                        'weight_decay': 0.005},
    'port': 42003,
    'pretrain': {   'checkpoint': 'vittiny_ctnk400_150epoch-latest.pth.tar',
                    'checkpoint_key': 'target_encoder',
                    'clip_duration': None,
                    'folder': '/media/backup_16TB/sean/VJEPA/jepa/configs/evals_a6000/vit_tiny/debug_vid/',
                    'frames_per_clip': 16,
                    'model_name': 'vit_tiny',
                    'patch_size': 16,
                    'tight_silu': False,
                    'tubelet_size': 2,
                    'uniform_power': True,
                    'use_sdpa': True,
                    'use_silu': False,
                    'write_tag': 'vid_test'},
    'resume_checkpoint': False,
    'tag': 'vit_tiny_brainslice48_ADbinclass',
    'tasks_per_node': 1}
INFO:root:Running... (rank: 0/1)
wandb: Currently logged in as: jl-seanchen (voxel-jepa) to https://api.wandb.ai. Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.19.11
wandb: Run data is saved locally in /media/backup_16TB/sean/VJEPA/jepa/wandb/run-20250806_233001-8fy0joq8
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run vid_test
wandb: ‚≠êÔ∏è View project at https://wandb.ai/voxel-jepa/voxel-jepa-ad-bin-tiny-test
wandb: üöÄ View run at https://wandb.ai/voxel-jepa/voxel-jepa-ad-bin-tiny-test/runs/8fy0joq8
INFO:root:Running evaluation: video_classification_frozen




 IN CLASSIFICATION FINE TUNING 




INFO:root:Initialized (rank/world-size) 0/1
wandb: wandb.init() called while a run is active and reinit is set to 'default', so returning the previous run.
INFO:root:Loading pretrained model from /media/backup_16TB/sean/VJEPA/jepa/configs/evals_a6000/vit_tiny/debug_vid/vittiny_ctnk400_150epoch-latest.pth.tar
VisionTransformer(
  (patch_embed): PatchEmbed3D(
    (proj): Conv3d(3, 192, kernel_size=(2, 16, 16), stride=(2, 16, 16))
  )
  (blocks): ModuleList(
    (0-11): 12 x Block(
      (norm1): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
      (attn): Attention(
        (qkv): Linear(in_features=192, out_features=576, bias=True)
        (attn_drop): Dropout(p=0.0, inplace=False)
        (proj): Linear(in_features=192, out_features=192, bias=True)
        (proj_drop): Dropout(p=0.0, inplace=False)
      )
      (norm2): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
      (mlp): MLP(
        (fc1): Linear(in_features=192, out_features=768, bias=True)
        (act): GELU(approximate='none')
        (fc2): Linear(in_features=768, out_features=192, bias=True)
        (drop): Dropout(p=0.0, inplace=False)
      )
    )
  )
  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
)
INFO:root:loaded pretrained model with msg: <All keys matched successfully>
INFO:root:loaded pretrained encoder from epoch: 150
 path: /media/backup_16TB/sean/VJEPA/jepa/configs/evals_a6000/vit_tiny/debug_vid/vittiny_ctnk400_150epoch-latest.pth.tar
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:VideoDataset dataset created
INFO:root:VideoDataset unsupervised data loader created
INFO:root:Dataloader created... iterations per epoch: 51
INFO:root:Using AdamW
/media/backup_16TB/sean/VJEPA/jepa/evals/video_classification_frozen/eval.py:628: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  scaler = torch.cuda.amp.GradScaler() if use_bfloat16 else None
INFO:root:Epoch 1
/media/backup_16TB/sean/VJEPA/jepa/evals/video_classification_frozen/eval.py:386: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(dtype=torch.float16, enabled=use_bfloat16):
/home/sean/anaconda3/envs/jepa/lib/python3.9/contextlib.py:87: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
INFO:root:[    0] 50.000% (loss: 0.696) [mem: 5.59e+02]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
INFO:root:[   20] 49.320% (loss: 0.745) [mem: 5.59e+02]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
INFO:root:[   40] 50.871% (loss: 0.703) [mem: 5.59e+02]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([8, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
INFO:root:[    0] 42.857% (loss: 0.730) [mem: 5.59e+02]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([14, 3, 16, 224, 224])]
this is len of data 5
this is len of data[0] 1
this print failed shape of data within data[0], [data.shape for data in data[0]]
this is shape of [(len(data)) for data in data[0]] [1]
this is shape of [data[0].shape for data in data[0]] [torch.Size([12, 3, 16, 224, 224])]
INFO:root:[    1] train: 49.965% test: 49.725%
